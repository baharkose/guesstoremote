# -*- coding: utf-8 -*-
"""MukQuestions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1zx1y1_8smwaudKb5ERM2d6BkBkn6WN
"""

harfler = "abcçdefgğhıijklmnoöprsştuüvyz"
çevrim = {i: harfler.index(i) for i in harfler}

isimler = ["ahmet", "ışık", "ismail", "çiğdem",
           "can", "şule", "iskender"]

print(sorted(isimler, key=lambda x: çevrim.get(x[0])))

"""3. Write a Python program to display the current date and time."""

import datetime
now = datetime.datetime.now()
print ("Current date and time : ")
print (now.strftime("%d-%m-%Y %H:%M:%S"))

"""Write a Python program to find those numbers which are divisible by 7 and multiples of 5, between 1500 and 2700 (both included)."""

find_number =[]

for i in range(1500,2700):
  if i % 5 == 0 and i % 7 == 0:
    find_number.append(i)

print(find_number)

import time
print('şimdi')
# time.sleep(10)
print('3 sn sonra')
y = cnv3.create_text(600, 430, text='Authentication failed', font=('Times', 30), fill='yellow')

import time
number = int(random.random()*100)
duration = 120
duration_list = []
while duration > 0:
  duration_list.append(duration)
  time.sleep(1)
  duration -= 1

import random
import time

number = int(random.random()*100)
duration = 120


print(number)

# information_list = []
entered_numbers = []

print('***Welcome to finding number game', end='\n\n')
print('***You will race against to a kuantum computer', end='\n\n')
print('***You both have 5 chances, can try only 5 times', end='\n\n')
print('***You both have a 120 seconds to find correct number', end='\n\n')
print('***If you are ready, let\'s start', end='\n\n')



chance = 5

while chance > 0:
      guess = int(input('Please, guess a number '))
      entered_numbers.append(guess)
      chance -= 1
      if(guess > number):
        print('Down')
        time.sleep(1.5)
      elif (guess < number):
        print('Up')
        time.sleep(1.5)
      else:
        print('founded')
        break;
      print(f'You have left only {chance} chances')
      time.sleep(1.5)
      print(f'It\'s time to sort of Quantum Computer(QC)')
      random_quantum = int(random.random()*100)
      print(f'QC\'s guess: {random_quantum} ')
      time.sleep(1.5)
      entered_numbers.append(random_quantum)
      if(random_quantum > number):
        print('Down')
        time.sleep(1.5)
      elif (random_quantum < number):
        print('Up')
        time.sleep(1.5)
      else:
        print('QC win, you lost..')
        break;
      print(entered_numbers)

print(f'Two of you lost, the number is: {number}')

# Ubuntu
import subprocess

def sendmessage(message):
    subprocess.Popen(['notify-send', message])


# Windows 10 (python 2 is now depricated!)
# pip/3 install win10toast
from win10toast import ToastNotifier

def send_notification(title, message):
    notifier = ToastNotifier()
    notifier.show_toast(title, message)

import time
from plyer import notification


if __name__=="__main__":

        notification.notify(
            title = "HEADING HERE",
            message=" DESCRIPTION HERE" ,

            # displaying time
            timeout=2
)
        # waiting time
        time.sleep(7)

import time
import turtle

player = turtle.Turtle()
timer_text = turtle.Turtle()

number = int(input('Please, enter a number: '))
star = '*'
for i in range(number):
  print(star)
  star=star + '*'

number = int(input('Please, enter a number: '))
star = '*'
space = ' '
for i in range(number):
  print(space*i +star)
  star='*' + star + '*'

metin = 'bahar'
len(metin)

number = int(input('Please, enter a number: '))
star = '*'
space = ' '*(number-1)

for i in range(number):
  print(space + star)
  star += '**'
  space = space + '\b'

counter = len(star)
space2 = ' '*int(((counter/2)-3))
print(space2 + '| |')
print(space2 + '| |')

"""Girilen cümlenin en uzun kelimesini bulma işlemi"""

cumle = input('Bir cumle yaziniz : ')
kelimeler = cumle.split()
en_uzun = 0     # en uzun kelimenin harf sayisi
i = 0          # index degeri
length = len(kelimeler)      # listenin eleman sayisi
while i < length:
  if len(kelimeler[i])>en_uzun:
    en_uzun=len(kelimeler[i])
    uzun_kelime = kelimeler[i]
  i+=1
print(f'En uzun kelime {uzun_kelime}')
print(f'En uzun kelimenin harf sayisi {en_uzun}')

kelime = max(kelimeler, key=len)
print('en uzun kelime', kelime, len(kelime),'harfi')



text = ['one','two', 'three', 'four', 'five']
numbers = [1, 2, 3, 4, 5]
for x, y in zip(text, numbers):
  print(x, ':', y)

